#!/bin/bash
cd /var/log
cat /dev/null> messages
cat /dev/null>wtmp
echo "log cleaned up."

#所有服务的登录的文件或错误信息文件（LOG FILES)都在/var/log下
#此外，一些数据库如MySQL则在/var/lib下，还有，用户未读的邮件的默认存放地点为/var/spool/mail
#登录记录:/var/log/wtmp      记录登录者讯录，二进制文件，须用last来读取内容    who -u /var/log/wtmp 查看信息
/var/log/messages
    messages 日志是核心系统日志文件。它包含了系统启动时的引导消息，以及系统运行时的其他状态消息。IO 错误、网络错误和其他系统错误都会记录到这个文件中。其他信息，比如某个人的身份切换为 root，也在这里列出。如果服务正在运行，比如 DHCP 服务器，您可以在 messages 文件中观察它的活动。通常，/var/log/messages 是您在做故障诊断时首先要查看的文件。
/var/log/wtmp
   该 日志文件永久记录每个用户登录、注销及系统的启动、停机的事件。因此随着系统正常 运行时间的增加，该文件的大小也会越来越大，增加的速度取决于系统用户登录的次数。该日志文件可以用来查看用户的登录记录，last命令就通过访问这个文 件获得这些信息，并以反序从后向前显示用户的登录记录，last也能根据用户、终端 tty或时间显示相应的记录。
命令last有两个可选参数：
last -u 用户名 显示用户上次登录的情况。
last -t 天数 显示指定天数之前的用户登录情况。
/var/run/utmp
   该 日志文件记录有关当前登录的每个用户的信息。因此这个文件会随着用户登录和注销系 统而不断变化，它只保留当时联机的用户记录，不会为用户保留永久的记录。系统中需要查询当前用户状态的程序，如 who、w、users、finger等就需要访问这个文件。该日志文件并不能包括所有精确的信息，因为某些突发错误会终止用户登录会话，而系统没有及时 更新 utmp记录，因此该日志文件的记录不是百分之百值得信赖的。
以 上提及的3个文件（/var/log/wtmp、/var/run/utmp、 /var/log/lastlog）是日志子系统的关键文件，都记录了用户登录的情况。这些文件的所有记录都包含了时间戳。这些文件是按二进制保存的，故 不能用less、cat之类的命令直接查看这些文件，而是需要使用相关命令通过这些文件而查看。其中，utmp和wtmp文件的数据结构是一样的，而 lastlog文件则使用另外的数据结构，关于它们的具体的数据结构可以使用man命令查询。
每 次有一个用户登录时，login程序在文件lastlog中查看用户的UID。如果存在，则把用户上次登录、注销时间和主机名写到标准输出中，然后 login程序在lastlog中记录新的登录时间，打开utmp文件并插入用户的utmp记录。该记录一直用到用户登录退出时删除。utmp文件被各种 命令使用，包括who、w、users和finger。
下一步，login程序打开文件wtmp附加用户的utmp记录。当用户登录退出时，具有更新时间戳的同一utmp记录附加到文件中。wtmp文件被程序last使用。

#!/bin/bash
#clean log
#version 0.03
Log_dir=/var/log
#$UID为0的时候，用户才具有root用户的权限
ROOT_UID=0
#默认的保存行数
LINES=50
#不能修改目录
E_XCD=66
#非root用户将以error退出
E_NOTROOT=67
#需要root用户才能运行，不是root用户将提示must be root to run this script并退出。
if [ "$UID" -ne "$ROOT_UID" ]
then
        echo"must be root to run this script"
        exit $E_NOTROOT
fi
#测试是否有命令行参数（非空）
if [ -n "$1" ]
then
        lines=$1
else
        lines=$LINES#默认，如果不在命令行中指定
fi
#非数值参数（错误的参数格式）
E_WRONGARGS=65
case "$1" in
"")lines=50;;
*[!0-9]*)echo "Usage:'basename $0' file-to-cleanup";exit $E_WRONGARGS;;
*)lines=$1;;
esac
cd $Log_dir
#在处理log file之前，再确认一遍当前目录是否正确
if [ "$PWD" != "$Log_dir" ]
then
        echo "Can't change to $Log_dir"
        exit $E_XCD
fi
#保存log file消息的最后部分
tail -$lines messages >mesg.temp
mv mesg.temp messages#变为新的log
#cat /dev/null > messages
cat /dev/null > wtmp
echo "logs cleaned up"
#退出之前返回0，返回0表示成功
exit 0




