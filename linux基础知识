列出当前目录下的所有文件和子目录
ls -al

显示文件大小
ls -hl

打开六个Terminal
ALT + F1——F6
Ctrl + Alt + F1-F6可以打开不同的terminal,在命令行输入startx或者按下Ctrl + Alt + F7可以切换到图形界面

取消一个已经运行的shutdown
shutdown -c

cd后面不加目录，会回到用户的home目录。如果是root用户，则进入/root，与cd ~或者cd #作用一样。
.是指当前目录，..是指上一级目录
cd -  快速返回上一级目录

显示当前目录
pwd

创建一个用户组
groupadd group_name
删除一个用户组
groupdel group_name
创建一个用户
useradd user_name -g main_group -G minor_group -d /home/user_name -p user_passwd
-g用户的主要组
-G用户的次要组
-d指定用户的home目录
-p用户密码

删除一个用户
userdel user_name

1.shell定义变量时, =号的两边都不可以留空格.
2.if条件测试语句 [ 符号的两边都要留空格.
3.条件测试的内容,如果是字符串比较的话, 比较符号两边要留空格!
4.如果if 和 then写在同一行, 那么,注意, then的前面要跟上 ; 号.如果 then 换行写, 那么也没问题.
5.if 后面一定要跟上 then. 同理elif 后面一定要跟上 then.
不然提示出错信息:syntax error near unexpected token else

1）if 语句后面需要跟着then，同时前面要有分号；
2) 空格非常重要，shell 会认为空格前的为一个命令，如果a=3 认为是赋值操作，如果写成a = 3，那么就会认为a为一个命令 this=`ls -l |grep ‘^-' | wc -l `
3) 操作符之间要用空格分开 ，如 test ! -d $1，其中的！和-d就要用空格分开
空格是命令解析中的重要分隔符

6. 命令和其后的参数或对象之间一定要有空格

if [ -x "~/Workspace/shell/a.sh" ];then
只有 -x 后有空格才表示紧跟其后的字符串是否指向一个可执行的文件名，否则就成了测试 -x"~/Workspace/shell/a.sh" 这个字符串是不是空。

7.取变量值的符号'$'和后边的变量或括号不能有空格




在linux中，：是一个空命令，等价于“NOP”（no op ,一个什么也不干的命令），也可以认为与shell的内建命令（True）作用相同。“：”命令是一个bash的内建命令，它的返回值为0，就是shell返回的true。
#!/bin/bash
:
echo $?
显示为0

:> file
:和>结合使用，把一个文件截断到0长度，没有修改它的权限。如果文件之前并不存在，则创建它。
举例：
[root@linux]$ cat test.sh
#!/bin/bash
echo "\$#=$#"
echo "\$0=$0"
echo "\$1=$1"
echo "\$2=$2"
echo "\$@=$@"
echo "\$?=$?"
[root@linux]$ :> test.sh
[root@linux]$ cat test.sh
[root@linux]$
：>的作用与cat /dev/null > file的作用相同。

()命令组，如：
（a=hello;echo $a）
在()中的命令列表，将作为一个子shell来运行。
在()中的变量，由于是在子shell中，所以对于脚本剩下的部分是不可用的。

#把file1，file2,file3,连接在一起，并且重定向到combined_file中
cat {file1,file2,file3} > combined_file

#拷贝file22.txt到file22.backup中
cp file22.{txt,backup}

