fsck命令用来检查文件系统并尝试修复错误。
fsck [options] [-t <文件系统类型>] [设备名]
-a  自动修复文件系统，没有任何提示
-r  采取互动的修复模式，在执行修复时进行询问，让用户确认并决定处理方式
-A  依照/etc/fstab配置文件的内容，检查文件内所列的全部文件系统
-T  执行fsck指令时，不显示标题信息
-V  显示fsck指令的执行过程
-N  不执行指令，仅列出实际执行会进行的动作

在执行fsck时，必须将要修复的设备进行umount后，再执行fsck命令


-t<文件系统类型>是指定要检查的文件系统类型。
在执行fsck命令修复某个文件系统时，这个文件系统对应的磁盘分区一定要处于卸载状态，磁盘分区在挂载状态下进行修复是极为不安全的，数据可能遭到破坏，也有可能损坏磁盘。


举例：
检查并尝试修复出问题的磁盘分区/dev/sda10，在执行修复时进行询问，让用户得以确认并决定处理方式，显示详细修复过程。
fsck -rV it ext3 /dev/sda10

当用户在利用fsck命令修复磁盘分区以后，如果发现分区中有文件丢失，就可以到对应的lost+found目录中去查找。
由于此时通过文件名称已经无法分辨文件，可以利用file命令查看文件系统类型，进而判断哪个是我们需要的文件。


e2fsck  检查和修复ext2和ext3文件系统

sync
sync命令用来强制把内存中的数据写回硬盘，以免数据和丢失。
在linux系统中，修改过的操作会缓存到内存中，不会马上写入硬盘，linux默认每隔3秒系统自动执行一次sync操作，系统正常关机时也会执行sync操作，保证所有操作全部从内存写入磁盘。
如果非法关机，系统内存信息无法及时同步到硬盘，就会造成数据丢失或者文件损坏。



cat /etc/filesystems  查看linux支持的文件系统类型
文件分类：
是否有日志可以分为：传统型文件系统、日志型文件系统
如何查找数据：索引式文件系统、非索引式文件系统
传统型文件系统：写入文件内容时，先写入数据，再写入元数据，在掉电时不安全。例如linux默认的文件系统ext2

日志型文件系统:更安全，写入文件内容的时候，首先写入日志记录文件。例如ext3、ReiserFS文件系统
ext3是对ext2的扩展，在ext2基础上加入日志功能
ReiserFS使用基于平衡树的文件系统，节约空间，小于4k直接入树，搜索快。

索引式文件系统：文件属性数据和实际内容存放在不同的区块，速度快

非索引式文件系统：只有block，数据需要一个block接一个block读取。如windows下的FAT文件系统

fdisk   创建分区
fdisk 设备名


mkfs    创建文件系统
-t  指定文件系统类型，如ext3
-b  指定block大小，单位bytes，ext2/ext3只支持1024，2048，4096三种

fdisk -t ext3 -b 1024 /dev/sda6
mount /dev/sda6/root/testmount





