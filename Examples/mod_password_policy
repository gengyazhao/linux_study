#!/bin/bash
#Function:对账户的密码进行加固
read -p "设置密码最多可多少天不修改:" MAX_DAY
#read -p "设置密码修改之间最小的天数:" MIN_DAY
#read -p "设置密码最短的长度:" MIN_LEN
#read -p "设置密码失效前多少天通知用户:" WARNING_DAY
#sed c\PASS_MAX_DAYS '$MAX_DAY'用c\后的新行替换符合^PASS_MAX_DAYS的行
sed -i '/^PASS_MAX_DAYS/c\PASS_MAX_DAYS '$MAX_DAY'' ./login.defs
sed -i '/^PASS_MIN_DAYS/c\PASS_MIN_DAYS '$MIN_DAY'' ./login.defs
sed -i '/^PASS_MIN_LEN/c\PASS_MIN_LEN '$MIN_LEN'' ./login.defs
sed -i '/^PASS_WARN_ACE/c\PASS_WARN_ACE '$WARNING_DAY'' ./login.defs
echo "已对密码进行加固，新用户不得和旧密码相同，且新密码必须同时包含数字、小写字母、大写字母！！"
#/etc/login.defs
#/etc/pam.d/system-auth
#SUSE Linux Enterprise Server 10 中没有/etc/pam.d/system-auth,可以在/etc/pam.d/login中修改
sed -i '/pam_pwquality.so/c\password requisite pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type= difok=1 minlen=8 ucredit=-1 lcredit=-1 dcredit=-1' ./system-auth

echo "已对密码进行加固，如果输入错误密码超过3次，则锁定账户！！"
#/etc/pam.d/sshd
n=`cat ./sshd | grep "auth required pam_tally2.so" | wc -l`
if [ $n -eq 0 ];then
        sed -i '/%PAM-1.0/a\auth required pam_tally2.so deny=3 unlock_time=150 even_deny_root root_unlock_time300' ./sshd
fi
echo "已设置禁止root用户远程登录！！"
#/etc/ssh/sshd_config
sed -i 'PermitRootLogin/c\PermitRootLogin no' ./sshd_config

read -p "设置历史命令保存条数：" HISTORY_NUM
read -p "设置账户自动注销时间：" LOGOUT_TIME
#etc/profile
sed -i '/^HISTSIZE/c\HISTSIZE='$HISTORY_NUM'' ./profile
sed -i '/^HISTSIZE/a\TMOUT='$LOGOUT_TIME'' ./profile

echo "已设置只允许wheel组的用户可以使用su命令切换到root用户！"
#/etc/pam.d/su
sed -i 'pam_wheel.so use_uid/c\auth required pam_wheel.so use_uid ' ./su
n=`cat ./login.defs | grep SU_WHEEL_ONLY | wc -l`
if [ $n -eq 0 ];then
        echo SU_WHEEL_ONLY yes >> ./login.defs
fi
echo "即将对系统中的账户进行检查...."
echo "系统中有登录权限的用户有："
#/etc/passwd
awk -F: '($7=="/bin/bash"){print $1}' ./passwd
echo "***************************************************************"
#/etc/shadow
N=`awk -F: '($2==""){print $1}' ./shadow | wc -l`
echo "系统中空密码用户有：$N"
if [ $N -eq 0 ];then
        echo "恭喜你，系统中无空密码用户！！"
        echo "***************************************************************"
else
        i=1
        while [ $n -gt 0 ]
        do
                None=`awk -F: '($2==""){print $1}' ./shadow | awk 'NR=='$i'{print}'`
                ehco "------------------------------------------------------------"
                echo $None
                echo "必须为空用户设置密码!!"
                passwd $None
                let N--
        done
        M=`awk -F: '($2==""){print $1}' ./shadow | wc -l`
        if [ $M -eq 0 ];then
                echo "恭喜，系统中已经没有空密码用户了！"
        else
                echo "系统中还存在空密码用户：$M"
        fi
fi

echo "即将对系统中重要文件进行锁定，锁定后将无法添加删除用户和组"
read -p "警告：此脚本运行后将无法添加删除用户和组！！确定输入Y,取消输入N, Y/N: " i
case $i in
        [y,Y])
                chattr +i ./passwd
                chattr +i ./shadow
                #/etc/group
                #/etc/gshadow
                chattr +i ./group
                chattr +i ./gshadow
                echo "锁定成功！"
                ;;
        [n,N])
                chattr -i ./passwd
                chattr -i ./shadow
                chattr -i ./group
                chattr -i ./gshadow
                echo "取消锁定成功！！"
                ;;
        *)
                echo "请输入Y/y or N/n"
esac
